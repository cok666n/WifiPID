<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
	<meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
 	<link rel="shortcut icon" href="webIcon.ico" />
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <title></title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" type="text/javascript"></script>
	<script type="text/javascript">
		var wemosID = "45bdf600"
        var dataSet = [];
        // Create a client instance
        var clientID = "myclientid_" + parseInt(Math.random() * 100, 10);
        client = new Paho.MQTT.Client("mqtt.teknome.com", Number("8083"), clientID);
        console.log("clientID" + clientID );

        // set callback handlers
        client.onConnectionLost = onConnectionLost;
        client.onMessageArrived = onMessageArrived;

        // connect the client
        client.connect({
            userName: "",
            password: "",
            useSSL: false,
            onSuccess: onConnect           
        });


        // called when the client connects
        function onConnect() {
            // Once a connection has been made, make a subscription and send a message.
            console.log("onConnect");
            client.subscribe("/" + wemosID + "/sts/#");
        }

        // called when the client loses its connection
        function onConnectionLost(responseObject) {
            if (responseObject.errorCode !== 0) {
                console.log("onConnectionLost:" + responseObject.errorMessage);
            }
        }

        // called when a message arrives
        function onMessageArrived(message) {
            console.log("onMessageArrived: From: " + message.destinationName + " Message: " + message.payloadString);

            var receivedData = JSON.parse(message.payloadString);

        }
		
		/*Doc ready*/
		$(function () {
			
			$("#btnStartStop").click(function () {
				if($("#btnStartStop").hasClass("btn-success"))
				{
					//todo: start
					$("#btnStartStop").removeClass("btn-success").addClass("btn-danger");
					$("#btnStartStop").val("Stop");
				}
				else
				{
					//todo: stop
					$("#btnStartStop").removeClass("btn-danger").addClass("btn-success");
					$("#btnStartStop").val("Start");
				}
               
                reqTakePige();
            });

		});

    </script>

    <style>
.con-section{
	margin-top: 15px;
	margin-bottom: 15px;
	border: 1px black solid;
}
		.section-col{
			font-weight: bold;
			background-color:darkgrey;
		}	
		.header-col{
			font-weight: bold;
			background-color:gainsboro;
			text-align: center;
		}
		.temp-display
		{
			line-height: 100px;
			font-size: xx-large;
			font-weight: bold;
			text-align: center;		
			vertical-align: middle;		
		}
		.settings, .status
		{
			line-height: 60px !important; 
			font-size: large;
			text-align: center;		
			vertical-align: middle;	
		}

	.settings input{
		width: 100%;
	}
    </style>
</head>
<body>
    <form id="form1" runat="server">
		<nav class="navbar navbar-light bg-light">
			<a class="navbar-brand" href="#">
			  <img src="icon.png" width="30" height="30" class="d-inline-block align-top" alt="">
			  WifiPID
			</a>
		  </nav>
		<div class="container con-section">
			<div class="row ">
				<div class="col-12 section-col">Status</div>
			</div>
			<div class="row">
				<div class="col-6 header-col">Current Temperature</div>
				<div class="col-6 header-col">Set Point</div>
			</div>
			<div class="row">
				<div class="col-6 temp-display" ><span id="current-temp" >0.00</span></div>
				<div class="col-6 temp-display"><span id="set-point" >0.00</span></div>
			</div>
			<div class="row">
					<div class="col-3 header-col">Running</div>
					<div class="col-3 header-col">PWM</div>
					<div class="col-3 header-col">Heating</div>
					<div class="col-3 header-col">Cooling</div>
			</div>
			<div class="row">
					<div class="col-3 status">Yes</div>
					<div class="col-3 status">75%</div>
					<div class="col-3 status">ON</div>
					<div class="col-3 status">OFF</div>
			</div>
			</div>
			<div class="container con-section">
			<div class="row ">
					<div class="col-12 section-col">Settings</div>
			</div>
			<div class="row">
				<div class="col-3 header-col">Start/Stop</div>
				<div class="col-3 header-col">P</div>
				<div class="col-3 header-col">I</div>
				<div class="col-3 header-col">D</div>
			</div>
			<div class="row settings">
					<div class="col-3 setting-cell"><input id="btnStartStop" type="button" class="btn btn-success" value="Start"></div>
					<div class="col-3 setting-cell"><input type="button" class="btn btn-secondary" value="P"></div>
					<div class="col-3 setting-cell"><input type="button" class="btn btn-secondary" value="I"></div>
					<div class="col-3 setting-cell"><input type="button" class="btn btn-secondary" value="D"></div>
			</div>
		</div>
		<div class="container con-section">
			<div class="row ">
					<div class="col-12 section-col">Stats</div>
			</div>
		</div>
	</div>
    </form>
</body>
</html>




