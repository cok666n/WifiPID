<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
	<meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
 	<link rel="shortcut icon" href="webIcon.ico" />
	<link rel="stylesheet" href="css/bootstrap.min.css">
    <title>WifiPID</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" type="text/javascript"></script>
	<script type="text/javascript" src="JS/jquery.flot.min.js"></script>
    <script type="text/javascript" src="JS/jquery.flot.time.min.js"></script>
    <script type="text/javascript" src="JS/jquery.flot.navigate.min.js"></script>
	<script type="text/javascript" src="JS/jquery.flot.resize.min.js"></script>
	<script type="text/javascript" src="JS/moment.min.js"></script>
	<script src="config.js"></script>
	<script type="text/javascript">
		var wemosID = "45bdf600"; //Todo: make configurable?
        var dataSet = [];
        // Create a client instance
        var clientID = "myclientid_" + parseInt(Math.random() * 100, 10);
        client = new Paho.MQTT.Client(CONFIG.mqttHost, Number(CONFIG.mqttPort), clientID);
        console.log("clientID" + clientID );

        // set callback handlers
        client.onConnectionLost = onConnectionLost;
        client.onMessageArrived = onMessageArrived;

        // connect the client
        client.connect({
            userName: CONFIG.mqttUsername,
            password: CONFIG.mqttPassword,
            useSSL: true,
            onSuccess: onConnect           
        });


        // called when the client connects
        function onConnect() {
            // Once a connection has been made, make a subscription and send a message.
            console.log("onConnect");
            client.subscribe("/" + wemosID + "/sts/#");
        }

        // called when the client loses its connection
        function onConnectionLost(responseObject) {
            if (responseObject.errorCode !== 0) {
                console.log("onConnectionLost:" + responseObject.errorMessage);
            }
        }

        // called when a message arrives
        function onMessageArrived(message) {
			var dateString = moment(new Date()).format('YYYY-MM-DD HH:mm:ss')
            console.log("onMessageArrived: From: " + message.destinationName + " Message: " + message.payloadString);
            var receivedData = message.payloadString;

			/*Subjects are /machine/sts/VAR */
			var subject = message.destinationName.split('/')[3]

            if (subject == "Temp") {
				$("#current-temp").html(receivedData);
				$("#current-temp-date").html(dateString);
			}
			else if (subject == "SetPoint") {
				$("#set-point").html(receivedData);
				$("#set-point-date").html(dateString);
			}
			else if (subject == "PID_Running") {
				$("#pid-running").html(receivedData);
				$("#pid-running-date").html(dateString);
				
				if( receivedData =="True" && $("#btnStartStop").hasClass("btn-success"))
				{
					$("#btnStartStop").removeClass("btn-success").addClass("btn-danger");
					$("#btnStartStop").val("Stop");
				}
				else if( receivedData =="False" && $("#btnStartStop").hasClass("btn-danger"))
				{
					$("#btnStartStop").removeClass("btn-danger").addClass("btn-success");
					$("#btnStartStop").val("Start");
				}
			}
			else if (subject == "PID_Ouput") {
				$("#pid-pwm").html(receivedData);
				$("#pid-pwm-date").html(dateString);
			}
			else if (subject == "Relay") { //Todo change to heat and cool on the FW
				$("#pid-heating").html(receivedData);
				$("#pid-heating-date").html(dateString);
			}
			else if (subject == "Cooling") {
				$("#pid-cooling").html(receivedData);
				$("#pid-cooling-date").html(dateString);
			}
			else if (subject == "P") {
				$("#btnP").val(receivedData);
			}
			else if (subject == "I") {
				$("#btnI").val(receivedData);
			}
			else if (subject == "D") {
				$("#btnD").val(receivedData);
			}
        }
		
		/*Doc ready*/
		$(function () {
			
			$("#btnStartStop").click(function () {
				if($("#btnStartStop").hasClass("btn-success"))
				{
					//todo: start
					$("#btnStartStop").removeClass("btn-success").addClass("btn-danger");
					$("#btnStartStop").html("Stop");
				}
				else
				{
					//todo: stop
					$("#btnStartStop").removeClass("btn-danger").addClass("btn-success");
					$("#btnStartStop").html("Start");
				}
            });

			//Get data from adafruit
            $.ajax({
                type: "get",
                data: "{'start_time': '" + "2017-02-20T00:00:00" +"' }",
                url: ' https://io.adafruit.com/api/v2/joey_teknome/feeds/wemos-temperature/data',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
					console.log("Adafruit, received " + result.length + " entries.");
					result.forEach(element => {
						var datapoint = [moment(element["created_at"]),JSON.parse(element["value"])];
						dataSet.unshift(datapoint);												
					});    
				
					if(dataSet.length == 0){
						$("#lblAucunDonnees").show();
						$("#graphDiv").hide();
					}
					else{
						$("#lblAucunDonnees").hide();
						$("#graphDiv").show();
					

				plot = $.plot("#graphDiv", [
							dataSet
                        ], {
                            xaxis: {
                                mode: "time",
                                timezone: "browser",
                            },
                            yaxis: {
                                min: 0,
                                max: 40,
                            },
                            series: {
                                lines: {
                                    show: true
                                },
                                points: {
                                    show: false
                                }
                            },
                            grid: {
                                hoverable: true,
                                clickable: true
                            },
                            zoom: {
                                interactive: true
                            },
                            pan:
                            {
                                interactive: true
                            }

						});
					}	         
                },
                error: function () {
                    console.log("Error getting adafruit dada")
                }
            });

		});

    </script>

    <style>
.con-section{
	margin-top: 15px;
	margin-bottom: 15px;	
}
		.header-col{
			/*background-color:gainsboro;*/
			text-align: center;
		}
		.temp-display
		{
			line-height: 100px;
			font-size: xx-large;
			font-weight: bold;
			text-align: center;		
			vertical-align: middle;		
		}
		.date-display
		{
			font-size: small;
			text-align: center;		
			vertical-align: middle;		
		}
		 .status
		{
			line-height: 60px !important; 
			font-size: large;
			text-align: center;		
			vertical-align: middle;	
		}
		.settings
		{
			font-size: large;
			text-align: center;		
			vertical-align: middle;	
			line-height: 40px;
		}


	.settings input{
		width: 100%;
	}


	#graphDiv{
	height: 200px;
	}

	#footer-row{
		font-size: x-small;
		text-align: center;
	}

    </style>
</head>
<body class="">
		<main>
	<form id="form1" runat="server" >
		<nav class="navbar navbar-dark bg-primary ">
			<a class="navbar-brand tex" href="#">
			  <img src="icon.png" width="30" height="30" class="d-inline-block align-top" alt="">
			  WifiPID
			</a>
		  </nav>
		<div class="container con-section  border border-secondary rounded">
			<div class="row bg-primary">
				<div class="col-12 section-col">Status</div>
			</div>
			<div class="row bg-secondary">
				<div class="col-6 header-col">Current Temperature</div>
				<div class="col-6 header-col">Set Point</div>
			</div>
			<div class="row">
				<div class="col-6 temp-display" ><span id="current-temp" >-</span></div>
				<div class="col-6 temp-display"><span id="set-point" >-</span></div>
			</div>
			<div class="row">
				<div class="col-6 date-display" ><span id="current-temp-date" >yyyy-MM-dd HH:mm:ss</span></div>
				<div class="col-6 date-display"><span id="set-point-date" >yyyy-MM-dd HH:mm:ss</span></div>
			</div>
			<div class="row bg-secondary">
					<div class="col-3 header-col">Running</div>
					<div class="col-3 header-col">PWM</div>
					<div class="col-3 header-col">Heating</div>
					<div class="col-3 header-col">Cooling</div>
			</div>
			<div class="row">
					<div class="col-3 status"><span id="pid-running">-</span></div>
					<div class="col-3 status"><span id="pid-pwm">-</span>%</div>
					<div class="col-3 status"><span id="pid-heating" >-</span></div>
					<div class="col-3 status"><span id="pid-cooling" >-</span></div>
			</div>
			<div class="row">
				<div class="col-3 date-display d-none d-sm-block"><span id="pid-running-date">yyyy-MM-dd HH:mm:ss</span></div>
				<div class="col-3 date-display d-none d-sm-block"><span id="pid-pwm-date">yyyy-MM-dd HH:mm:ss</span></div>
				<div class="col-3 date-display d-none d-sm-block"><span id="pid-heating-date">yyyy-MM-dd HH:mm:ss</span></div>
				<div class="col-3 date-display d-none d-sm-block"><span id="pid-cooling-date">yyyy-MM-dd HH:mm:ss</span></div>
		</div>
			</div>
			<div class="container con-section  border border-secondary rounded">
			<div class="row bg-primary">
					<div class="col-12 section-col">Settings</div>
			</div>
			<div class="row bg-secondary border border-secondary ">
				<div class="col-3 header-col">Start/Stop</div>
				<div class="col-3 header-col">P</div>
				<div class="col-3 header-col">I</div>
				<div class="col-3 header-col">D</div>
			</div>
			<div class="row settings">
					<div class="col-3 setting-cell"><input id="btnStartStop" type="button" class="btn btn-success" value="Start"></div>
					<div class="col-3 setting-cell"><input type="button" id="btnP" class="btn" value="0"></div>
					<div class="col-3 setting-cell"><input type="button" id="btnI" class="btn" value="0"></div>
					<div class="col-3 setting-cell"><input type="button" id="btnD" class="btn" value="0"></div>
					<br/>
			</div>
		</div>
		<div class="container con-section border border-secondary rounded">
			<div class="row bg-primary">
					<div class="col-12 section-col">Stats</div>
				</div>
					<div class="row">
					<div id="graphDivContainer" class="col-12">
						<div id="graphDiv"></div>
						<span ID="lblAucunDonnees"> Aucune donnée disponible</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	</form>
	</main>
    <footer class="footer">
			<div class="container">
				<div class="row">
					<div class="col-12" id="footer-row">
			  <span class="text-muted">Joey Caron - 2018</span>
			</div>
			</div>
			</div>
		  </footer>
</body>
</html>




